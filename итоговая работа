# Тестирование открытия ЕЛК Web
from selenium import webdriver
from selenium.webdriver.common.by import By
import selenium.webdriver.common.keys

def clear(element):
    value = element.get.attribute('value')
    if len(value) > 0:
        for char in value:
            element.send_keys(Keys.BACK_SPACE)

driver = webdriver.Chrome()
driver.get('https://lk.rt.ru/')
el = driver.find_element(By.NAME, 'q')
el.send_keys('selenium')
el.send_keys(Keys.RETURN)

# Тестирование Онлайм Web
from selenium import webdriver
from selenium.webdriver.common.by import By
import selenium.webdriver.common.keys

def clear(element):
    value = element.get.attribute('value')
    if len(value) > 0:
        for char in value:
            element.send_keys(Keys.BACK_SPACE)

driver = webdriver.Chrome()
driver.get('https://my.rt.ru/')
el = driver.find_element(By.NAME, 'q')
el.send_keys('selenium')
el.send_keys(Keys.RETURN)

# Тестирование Старт Web
from selenium import webdriver
from selenium.webdriver.common.by import By
import selenium.webdriver.common.keys

def clear(element):
    value = element.get.attribute('value')
    if len(value) > 0:
        for char in value:
            element.send_keys(Keys.BACK_SPACE)

driver = webdriver.Chrome()
driver.get('https://start.rt.ru/')
el = driver.find_element(By.NAME, 'q')
el.send_keys('selenium')
el.send_keys(Keys.RETURN)

# Тестирование Умный дом Web
from selenium import webdriver
from selenium.webdriver.common.by import By
import selenium.webdriver.common.keys

def clear(element):
    value = element.get.attribute('value')
    if len(value) > 0:
        for char in value:
            element.send_keys(Keys.BACK_SPACE)

driver = webdriver.Chrome()
driver.get('https://lk.smarthome.rt.ru/')
el = driver.find_element(By.NAME, 'q')
el.send_keys('selenium')
el.send_keys(Keys.RETURN)

# Тестирование Ключ Web
from selenium import webdriver
from selenium.webdriver.common.by import By
import selenium.webdriver.common.keys

def clear(element):
    value = element.get.attribute('value')
    if len(value) > 0:
        for char in value:
            element.send_keys(Keys.BACK_SPACE)

driver = webdriver.Chrome()
driver.get('https://key.rt.ru/')
el = driver.find_element(By.NAME, 'q')
el.send_keys('selenium')
el.send_keys(Keys.RETURN)

# Тестирование входа
import pytest
from pages.auth_page import AuthPage

def test_authorisation(web_browser):

    page = AuthPage(web_browser)

    page.email.send_keys('test123@yandex.ru')

    page.password.send_keys("123456")

    page.btn.click()

    assert page.get_current_url() == 'https://lk.rt.ru/'

# Тестирование входа
import pytest
from pages.auth_page import AuthPage

def test_authorisation(web_browser):

    page = AuthPage(web_browser)

    page.email.send_keys('test123@yandex.ru')

    page.password.send_keys("123456")

    page.btn.click()

    assert page.get_current_url() == 'https://key.rt.ru/'

# Тестирование входа
import pytest
from pages.auth_page import AuthPage

def test_authorisation(web_browser):

    page = AuthPage(web_browser)

    page.email.send_keys('test123@yandex.ru')

    page.password.send_keys("123456")

    page.btn.click()

    assert page.get_current_url() == 'https://lk.smarthome.rt.ru/'

# Тестирование входа
import pytest
from pages.auth_page import AuthPage

def test_authorisation(web_browser):

    page = AuthPage(web_browser)

    page.email.send_keys('test123@yandex.ru')

    page.password.send_keys("123456")

    page.btn.click()

    assert page.get_current_url() == 'https://start.rt.ru/'

# Тестирование входа
import pytest
from pages.auth_page import AuthPage

def test_authorisation(web_browser):

    page = AuthPage(web_browser)

    page.email.send_keys('test123@yandex.ru')

    page.password.send_keys("123456")

    page.btn.click()

    assert page.get_current_url() == 'https://my.rt.ru/'

# Тестирование
from pages.base import WebPage
from pages.elements import WebElement


class AuthPage(WebPage):

    def __init__(self, web_driver, url=''):
        url = 'https://b2c.passport.rt.ru/auth/realms/b2c/login-actions/authenticate?execution=c1e48668-7859-4571-994c-b0dac0d9e8dc&client_id=account_b2c&tab_id=qeG7_Vwj1_k'
        super().__init__(web_driver, url)

    email = WebElement(id='email')

    password = WebElement(id='pass')

    btn = WebElement(class_name='btn.btn-success')

# Тестирование
from pages.base import WebPage
from pages.elements import WebElement


class AuthPage(WebPage):

    def __init__(self, web_driver, url=''):
        url = 'https://b2c.passport.rt.ru/auth/realms/b2c/login-actions/authenticate?execution=c1e48668-7859-4571-994c-b0dac0d9e8dc&client_id=account_b2c&tab_id=qeG7_Vwj1_k'
        super().__init__(web_driver, url)

    number = WebElement(id='number')

    password = WebElement(id='pass')

    btn = WebElement(class_name='btn.btn-success')

# Тестирование
from pages.base import WebPage
from pages.elements import WebElement


class AuthPage(WebPage):

    def __init__(self, web_driver, url=''):
        url = 'https://start.rt.ru/'
        super().__init__(web_driver, url)

    email = WebElement(id='email')

    password = WebElement(id='pass')

    btn = WebElement(class_name='btn.btn-success')

# Тестирование
from pages.base import WebPage
from pages.elements import WebElement


class AuthPage(WebPage):

    def __init__(self, web_driver, url=''):
        url = 'https://lk.smarthome.rt.ru/'
        super().__init__(web_driver, url)

    email = WebElement(id='email')

    password = WebElement(id='pass')

    btn = WebElement(class_name='btn.btn-success')

# Тестирование
from pages.base import WebPage
from pages.elements import WebElement


class AuthPage(WebPage):

    def __init__(self, web_driver, url=''):
        url = 'https://key.rt.ru/'
        super().__init__(web_driver, url)

    email = WebElement(id='email')

    password = WebElement(id='pass')

    btn = WebElement(class_name='btn.btn-success')
